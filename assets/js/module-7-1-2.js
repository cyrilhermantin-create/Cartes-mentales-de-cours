// ==========================================
// JAVASCRIPT POUR MODULE 7-1-2 : SYNTH√àSE
// ==========================================

// Questions du quiz bas√©es sur la taxonomie de Bloom
const questions = [
    {
        level: "memorisation",
        question: "Au-del√† de quelle dur√©e un march√© est-il obligatoirement r√©visable ?",
        options: [
            "1 mois",
            "3 mois", 
            "6 mois",
            "12 mois"
        ],
        correct: 1,
        feedback: "Un march√© de plus de 3 mois est obligatoirement r√©visable pour tenir compte de l'influence du temps sur les prix."
    },
    {
        level: "memorisation",
        question: "Quel est le pourcentage maximum de la retenue de garantie ?",
        options: [
            "3%",
            "5%",
            "7%",
            "10%"
        ],
        correct: 1,
        feedback: "La retenue de garantie ne peut pas exc√©der 5% du montant du march√©."
    },
    {
        level: "comprehension", 
        question: "Pourquoi organise-t-on une synth√®se technique avec tous les intervenants ?",
        options: [
            "Pour respecter la r√©glementation",
            "Pour d√©tecter les oublis, impr√©cisions et redondances",
            "Pour valider les prix des entreprises", 
            "Pour √©tablir le planning des travaux"
        ],
        correct: 1,
        feedback: "La synth√®se technique permet de d√©tecter les oublis, impr√©cisions et redondances dans les march√©s, et d'am√©liorer la connaissance du champ d'intervention de chacun."
    },
    {
        level: "application",
        question: "Dans un projet de construction d'√©cole, quels participants DOIVENT √™tre pr√©sents aux r√©unions de synth√®se technique ?",
        options: [
            "Seulement le ma√Ætre d'≈ìuvre et les entreprises",
            "MOE, MOA, Bureau de contr√¥le, entreprises, bureau d'√©tudes",
            "Uniquement le responsable pr√©vention et les entreprises",
            "Seulement le ma√Ætre d'ouvrage et le bureau de contr√¥le"
        ],
        correct: 1,
        feedback: "Les r√©unions de synth√®se technique doivent r√©unir : ma√Ætre d'≈ìuvre, ma√Ætre d'ouvrage, bureau de contr√¥le, entreprises et bureau d'√©tudes pour une analyse compl√®te."
    },
    {
        level: "analyse",
        question: "Analysez l'impact d'un d√©faut d'identification des interfaces techniques lors de la synth√®se :",
        options: [
            "Simple retard dans le planning",
            "Dysfonctionnements, non-conformit√©s et litiges entre entreprises",
            "Augmentation l√©g√®re des co√ªts",
            "Aucun impact majeur sur le projet"
        ],
        correct: 1,
        feedback: "Un d√©faut d'identification des interfaces techniques peut causer des dysfonctionnements majeurs, des non-conformit√©s et des litiges co√ªteux entre entreprises."
    },
    {
        level: "evaluation",
        question: "√âvaluez l'ordre de priorit√© : quel √©l√©ment traiter EN PREMIER lors de la synth√®se ?",
        options: [
            "Les points √† risque techniques",
            "L'organisation du contr√¥le",
            "La synth√®se g√©n√©rale de l'op√©ration (identification, march√©)",
            "Les modalit√©s de r√®glement"
        ],
        correct: 2,
        feedback: "La synth√®se g√©n√©rale doit √™tre trait√©e en premier car elle d√©finit le cadre g√©n√©ral, la nature du march√© et les modes d'intervention qui conditionnent tout le reste."
    },
    {
        level: "creation",
        question: "Vous devez cr√©er le processus de synth√®se pour un projet complexe (h√¥pital). Quelle approche adoptez-vous ?",
        options: [
            "Synth√®se g√©n√©rale ‚Üí Points √† risque ‚Üí Contr√¥le ‚Üí R√®glements",
            "Synth√®se g√©n√©rale ‚Üí R√®glements ‚Üí Synth√®se technique ‚Üí Pr√©vention/Contr√¥le", 
            "Points √† risque ‚Üí Synth√®se technique ‚Üí R√®glements ‚Üí Contr√¥le",
            "R√®glements ‚Üí Synth√®se g√©n√©rale ‚Üí Technique ‚Üí Points √† risque"
        ],
        correct: 1,
        feedback: "L'approche logique : 1) Cadre g√©n√©ral, 2) Aspects financiers, 3) Analyse technique avec tous les intervenants, 4) Organisation de la pr√©vention et du contr√¥le."
    },
    {
        level: "application",
        question: "Un march√© en lots s√©par√©s avec 8 lots b√¢timent et 3 lots VRD. Que devez-vous pr√©ciser dans la synth√®se ?",
        options: [
            "Seulement le nombre total de lots",
            "Le nombre de lots + liste et montants en annexe + coordination",
            "Uniquement les montants par lot",
            "Seulement les entreprises retenues"
        ],
        correct: 1,
        feedback: "Pour l'allotissement, il faut pr√©ciser : le nombre de lots par cat√©gorie, fournir la liste et montants en annexe, et d√©finir la coordination des travaux."
    }
];

let currentQuestion = 0;
let score = 0;
let quizStarted = false;

// ==========================================
// FONCTIONS DE NAVIGATION
// ==========================================

function showSection(section) {
    // Masquer toutes les sections
    document.querySelectorAll('.content-section').forEach(s => s.classList.remove('active'));
    document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
    
    // Afficher la section s√©lectionn√©e
    document.getElementById(section).classList.add('active');
    event.target.classList.add('active');
}

function toggleDetails(id) {
    const details = document.getElementById(id);
    if (details.style.display === 'none' || details.style.display === '') {
        details.style.display = 'block';
    } else {
        details.style.display = 'none';
    }
}

// ==========================================
// FONCTIONS DU QUIZ
// ==========================================

function startQuiz() {
    quizStarted = true;
    currentQuestion = 0;
    score = 0;
    document.getElementById('startQuiz').style.display = 'none';
    document.getElementById('restartQuiz').style.display = 'none';
    showQuestion();
}

function showQuestion() {
    if (currentQuestion >= questions.length) {
        showResults();
        return;
    }

    const question = questions[currentQuestion];
    const container = document.getElementById('quizContainer');
    
    const bloomLabels = {
        'memorisation': 'M√©morisation',
        'comprehension': 'Compr√©hension', 
        'application': 'Application',
        'analyse': 'Analyse',
        'evaluation': '√âvaluation',
        'creation': 'Cr√©ation'
    };

    container.innerHTML = `
        <div class="quiz-container">
            <div class="bloom-level bloom-${question.level}">
                Niveau Bloom: ${bloomLabels[question.level]}
            </div>
            <div class="question">${question.question}</div>
            <div class="options">
                ${question.options.map((option, index) => `
                    <div class="option" onclick="selectOption(${index})">${option}</div>
                `).join('')}
            </div>
            <div class="quiz-feedback" id="feedback"></div>
        </div>
    `;

    updateProgress();
    updateScore();
}

function selectOption(selectedIndex) {
    const question = questions[currentQuestion];
    const options = document.querySelectorAll('.option');
    const feedback = document.getElementById('feedback');
    
    // D√©sactiver tous les clics
    options.forEach((option, index) => {
        option.onclick = null;
        if (index === question.correct) {
            option.classList.add('correct');
        } else if (index === selectedIndex) {
            option.classList.add('incorrect');
        }
    });

    // Afficher le feedback
    if (selectedIndex === question.correct) {
        score++;
        feedback.className = 'quiz-feedback correct';
        feedback.innerHTML = '‚úÖ ' + question.feedback;
    } else {
        feedback.className = 'quiz-feedback incorrect';
        feedback.innerHTML = '‚ùå ' + question.feedback;
    }
    feedback.style.display = 'block';

    // Afficher le bouton suivant
    document.getElementById('nextQuestion').style.display = 'inline-block';
    updateScore();
}

function nextQuestion() {
    currentQuestion++;
    document.getElementById('nextQuestion').style.display = 'none';
    showQuestion();
}

function showResults() {
    const container = document.getElementById('quizContainer');
    const percentage = Math.round((score / questions.length) * 100);
    
    let resultMessage = '';
    let resultClass = '';
    let recommendations = '';
    
    if (percentage >= 85) {
        resultMessage = 'Excellence ! Vous ma√Ætrisez parfaitement la synth√®se.';
        resultClass = 'correct';
        recommendations = 'Vous √™tes pr√™t pour la mise en pratique professionnelle.';
    } else if (percentage >= 70) {
        resultMessage = 'Tr√®s bien ! Bonne ma√Ætrise globale du module.';
        resultClass = 'correct';
        recommendations = 'Revoyez les questions rat√©es avec la carte mentale.';
    } else if (percentage >= 50) {
        resultMessage = 'Correct, mais des am√©liorations sont n√©cessaires.';
        resultClass = 'incorrect';
        recommendations = 'Focalisez-vous sur la synth√®se Pareto (S-R-T-P) et recommencez.';
    } else {
        resultMessage = 'R√©vision indispensable. Reprenez le cours complet.';
        resultClass = 'incorrect';
        recommendations = 'Commencez par m√©moriser les 4 piliers S-R-T-P, puis utilisez la carte mentale.';
    }

    container.innerHTML = `
        <div class="quiz-container">
            <h2 style="text-align: center; color: #667eea; margin-bottom: 20px;">üéØ R√©sultats du Quiz</h2>
            <div class="score" style="font-size: 2.5em; margin: 20px 0;">${score}/${questions.length} (${percentage}%)</div>
            <div class="quiz-feedback ${resultClass}" style="display: block; text-align: center; font-size: 1.1em;">
                <strong>${resultMessage}</strong>
            </div>
            <div style="margin-top: 25px; padding: 20px; background: rgba(102, 126, 234, 0.1); border-radius: 12px;">
                <h3 style="color: #667eea; margin-bottom: 15px;">üìö Recommandations :</h3>
                <p style="line-height: 1.6;">${recommendations}</p>
            </div>
            <div style="margin-top: 20px; text-align: center;">
                <p style="color: #666; font-style: italic;">
                    üí° Conseil : Un score ‚â• 80% indique une ma√Ætrise op√©rationnelle du module.
                </p>
            </div>
        </div>
    `;

    document.getElementById('restartQuiz').style.display = 'inline-block';
    
    // Sauvegarder le score pour la progression
    saveProgress('module-7-1-2', percentage);
}

function restartQuiz() {
    document.getElementById('restartQuiz').style.display = 'none';
    document.getElementById('startQuiz').style.display = 'inline-block';
    document.getElementById('quizContainer').innerHTML = '';
    document.getElementById('progressBar').style.width = '0%';
    document.getElementById('scoreDisplay').textContent = 'Score: 0/0';
    quizStarted = false;
}

function updateProgress() {
    const progress = ((currentQuestion + 1) / questions.length) * 100;
    document.getElementById('progressBar').style.width = progress + '%';
}

function updateScore() {
    document.getElementById('scoreDisplay').textContent = `Score: ${score}/${currentQuestion + (quizStarted ? 1 : 0)}`;
}

// ==========================================
// SAUVEGARDE DE PROGRESSION
// ==========================================

function saveProgress(moduleId, percentage) {
    // Sauvegarde locale du score
    const progress = {
        moduleId: moduleId,
        score: percentage,
        completedAt: new Date().toISOString(),
        questionsTotal: questions.length,
        questionsCorrect: score
    };
    
    // Stocker dans les donn√©es de session (pas localStorage car non support√©)
    if (typeof(Storage) !== "undefined") {
        try {
            localStorage.setItem(`batilearn_${moduleId}`, JSON.stringify(progress));
        } catch(e) {
            // Fallback si localStorage non disponible
            console.log('Progression enregistr√©e en m√©moire:', progress);
        }
    }
}

// ==========================================
// INITIALISATION
// ==========================================

document.addEventListener('DOMContentLoaded', function() {
    // Charger la progression sauvegard√©e si disponible
    try {
        const savedProgress = localStorage.getItem('batilearn_module-7-1-2');
        if (savedProgress) {
            const progress = JSON.parse(savedProgress);
            console.log('Progression pr√©c√©dente charg√©e:', progress);
        }
    } catch(e) {
        console.log('Pas de progression sauvegard√©e trouv√©e');
    }
});
